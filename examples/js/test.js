// Generated by CoffeeScript 1.3.3
(function() {
  var Project, Track, TrackCollection,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Project = (function(_super) {

    __extends(Project, _super);

    function Project() {
      return Project.__super__.constructor.apply(this, arguments);
    }

    Project.prototype.sharedAttributes = ['title'];

    Project.prototype.initialize = function(project) {
      this.tracks = new TrackCollection(project.tracks, {
        parent: this
      });
      return this.set({
        title: project.title
      });
    };

    return Project;

  })(Backbone.SharedModel);

  TrackCollection = (function(_super) {

    __extends(TrackCollection, _super);

    function TrackCollection() {
      return TrackCollection.__super__.constructor.apply(this, arguments);
    }

    TrackCollection.prototype.path = 'tracks';

    TrackCollection.prototype.initialize = function(tracks, options) {
      this.parent = options.parent;
      return this.createChildren('tracks', tracks, Track);
    };

    return TrackCollection;

  })(Backbone.SharedCollection);

  Track = (function(_super) {

    __extends(Track, _super);

    function Track() {
      return Track.__super__.constructor.apply(this, arguments);
    }

    Track.prototype.sharedAttributes = ['title'];

    Track.prototype.initialize = function(track, options) {
      return this.set({
        title: track.title
      });
    };

    return Track;

  })(Backbone.SharedModel);

  window.Project = Project;

}).call(this);
